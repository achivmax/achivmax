{"version":3,"sources":["webpack:///component---src-pages-css-grid-09-named-lines-js-e14a834fd64e2bae44bf.js","webpack:///./src/pages/css-grid/09-named-lines.js"],"names":["webpackJsonp","224","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_react","_react2","_Main","_Main2","_CodeBlock","_CodeBlock2","_DevHomework","_DevHomework2","_CodepenLink","_CodepenLink2","_DownloadLink","_DownloadLink2","Tutorial","createElement","className","link","Homework","title","content","currentPageNum","tutorial","homework"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,EAASC,GAEhC,YA4BA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GA1BvFH,EAAQI,YAAa,CCPtB,IAAAE,GAAAL,EAAA,GDWKM,EAAUL,EAAuBI,GCVtCE,EAAAP,EAAA,IDcKQ,EAASP,EAAuBM,GCbrCE,EAAAT,EAAA,IDiBKU,EAAcT,EAAuBQ,GChB1CE,EAAAX,EAAA,IDoBKY,EAAgBX,EAAuBU,GCnB5CE,EAAAb,EAAA,IDuBKc,EAAgBb,EAAuBY,GCtB5CE,EAAAf,EAAA,ID0BKgB,EAAiBf,EAAuBc,GCxBvCE,EAAW,iBACfX,GAAAF,QAAAc,cAAA,WACEZ,EAAAF,QAAAc,cAAA,yBAEAZ,EAAAF,QAAAc,cAAA,gGACuF,IACrFZ,EAAAF,QAAAc,cAAA,2BAFF,QAE+BZ,EAAAF,QAAAc,cAAA,wBAF/B,sOAOAZ,EAAAF,QAAAc,cAAA,gFAEAZ,EAAAF,QAAAc,cAAAR,EAAAN,QAAA,uYAsBAE,EAAAF,QAAAc,cAAA,gKAKAZ,EAAAF,QAAAc,cAAAR,EAAAN,QAAA,+lBAkCAE,EAAAF,QAAAc,cAAA,8BAEAZ,EAAAF,QAAAc,cAAAR,EAAAN,QAAA,4TAaAE,EAAAF,QAAAc,cAAA,gCAEAZ,EAAAF,QAAAc,cAAA,OAAKC,UAAU,eACbb,EAAAF,QAAAc,cAAA,OAAKC,UAAU,iBAAf,UACAb,EAAAF,QAAAc,cAAA,OAAKC,UAAU,kBAAf,WACAb,EAAAF,QAAAc,cAAA,OAAKC,UAAU,oBAAf,aACAb,EAAAF,QAAAc,cAAA,OAAKC,UAAU,oBAAf,aACAb,EAAAF,QAAAc,cAAA,OAAKC,UAAU,oBAAf,aACAb,EAAAF,QAAAc,cAAA,OAAKC,UAAU,iBAAf,WAEFb,EAAAF,QAAAc,cAAAJ,EAAAV,SAAagB,KAAK,sDAIhBC,EAAW,iBACff,GAAAF,QAAAc,cAAAN,EAAAR,SAAakB,MAAM,sCACjBhB,EAAAF,QAAAc,cAAA,wcAK+E,IAC7EZ,EAAAF,QAAAc,cAAAF,EAAAZ,SAAcmB,QAAQ,kBAAtB,sCANF,MD0CHxB,GAAQK,QC7BM,iBAAME,GAAAF,QAAAc,cAAAV,EAAAJ,SAAMoB,eAAgB,EAAGC,SAAUnB,EAAAF,QAAAc,cAACD,EAAD,MAAcS,SAAUpB,EAAAF,QAAAc,cAACG,EAAD,SDiC/EvB,EAAOC,QAAUA,EAAiB","file":"component---src-pages-css-grid-09-named-lines-js-e14a834fd64e2bae44bf.js","sourcesContent":["webpackJsonp([81692003008797],{\n\n/***/ 224:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _Main = __webpack_require__(17);\n\t\n\tvar _Main2 = _interopRequireDefault(_Main);\n\t\n\tvar _CodeBlock = __webpack_require__(15);\n\t\n\tvar _CodeBlock2 = _interopRequireDefault(_CodeBlock);\n\t\n\tvar _DevHomework = __webpack_require__(12);\n\t\n\tvar _DevHomework2 = _interopRequireDefault(_DevHomework);\n\t\n\tvar _CodepenLink = __webpack_require__(27);\n\t\n\tvar _CodepenLink2 = _interopRequireDefault(_CodepenLink);\n\t\n\tvar _DownloadLink = __webpack_require__(16);\n\t\n\tvar _DownloadLink2 = _interopRequireDefault(_DownloadLink);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar Tutorial = function Tutorial() {\n\t  return _react2.default.createElement(\n\t    'div',\n\t    null,\n\t    _react2.default.createElement(\n\t      'h2',\n\t      null,\n\t      'Named Lines'\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'In a previous example, we learned how to place an item on the grid by providing the ',\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        'grid-column'\n\t      ),\n\t      ' and ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        'grid-row'\n\t      ),\n\t      ' properties with specific grid lines. We can also name some or all of those grid lines when defining a grid. This allows us to use those names instead of grid lines. To name a grid line, simply add the name in square brackets:'\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'To name a grid line, we simply provide the name in square brackets:'\n\t    ),\n\t    _react2.default.createElement(\n\t      _CodeBlock2.default,\n\t      null,\n\t      '\\n.container {\\n  display: grid;\\n  width: 100%;\\n  height: 600px;\\n  grid-gap: 1rem;\\n  grid-template-columns:\\n    [main-start sidebar-start] 200px\\n    [sidebar-end content-start] 1fr\\n    [column3-start] 1fr\\n    [content-end main-end];\\n  grid-template-rows:\\n    [row1-start] 80px\\n    [row2-start] 1fr\\n    [row3-start] 1fr\\n    [row4-start] 100px\\n    [row4-end];\\n}\\n      '\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'Now that we have line names, we can use those names when placing items. Let\\'s recreate our basic layout using named lines, instead of line numbers:'\n\t    ),\n\t    _react2.default.createElement(\n\t      _CodeBlock2.default,\n\t      null,\n\t      '\\n.header {\\n  grid-column: main-start / main-end;\\n  grid-row: row1-start / row2-start;\\n}\\n\\n.sidebar {\\n  grid-column: sidebar-start / sidebar-end;\\n  grid-row: row2-start / row4-start;\\n}\\n\\n.content-1 {\\n  grid-column: content-start / content-end;\\n  grid-row: row2-start / row3-start;\\n}\\n\\n.content-2 {\\n  grid-column: content-start / column3-start;\\n  grid-row: row3-start / row4-start;\\n}\\n\\n.content-3 {\\n  grid-column: column3-start / content-end;\\n  grid-row: row3-start / row4-start;\\n}\\n\\n.footer {\\n  grid-column: main-start / main-end;\\n  grid-row: row4-start / row4-end;\\n}\\n      '\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'Here is our HTML:'\n\t    ),\n\t    _react2.default.createElement(\n\t      _CodeBlock2.default,\n\t      null,\n\t      '\\n<div class=\"container\">\\n  <div class=\"item header\">header</div>\\n  <div class=\"item sidebar\">sidebar</div>\\n  <div class=\"item content-1\">Content-1</div>\\n  <div class=\"item content-2\">Content-2</div>\\n  <div class=\"item content-3\">Content-3</div>\\n  <div class=\"item footer\">footer</div>\\n</div>\\n      '\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'Here is the result:'\n\t    ),\n\t    _react2.default.createElement(\n\t      'div',\n\t      { className: 'container-9' },\n\t      _react2.default.createElement(\n\t        'div',\n\t        { className: 'item header-9' },\n\t        'header'\n\t      ),\n\t      _react2.default.createElement(\n\t        'div',\n\t        { className: 'item sidebar-9' },\n\t        'sidebar'\n\t      ),\n\t      _react2.default.createElement(\n\t        'div',\n\t        { className: 'item content-1-9' },\n\t        'Content-1'\n\t      ),\n\t      _react2.default.createElement(\n\t        'div',\n\t        { className: 'item content-2-9' },\n\t        'Content-2'\n\t      ),\n\t      _react2.default.createElement(\n\t        'div',\n\t        { className: 'item content-3-9' },\n\t        'Content-3'\n\t      ),\n\t      _react2.default.createElement(\n\t        'div',\n\t        { className: 'item footer-9' },\n\t        'footer'\n\t      )\n\t    ),\n\t    _react2.default.createElement(_CodepenLink2.default, { link: 'https://codepen.io/mozilladevelopers/pen/dVpQVV' })\n\t  );\n\t};\n\t\n\tvar Homework = function Homework() {\n\t  return _react2.default.createElement(\n\t    _DevHomework2.default,\n\t    { title: 'Firefox DevTools + CSS Grid Layout' },\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'Did you know you can customize the color of the grid overlay in Firefox DevTools? The above example is on a white background, and the default purple may not be the best color to use. When selecting an overlay grid to display, you will see a circle next to the grid name that indicates the color of the overlay. Click on that circle, and you can customize the color to whatever you\\'d like. Try a different color, such as red. Don\\'t have Firefox?',\n\t      ' ',\n\t      _react2.default.createElement(\n\t        _DownloadLink2.default,\n\t        { content: 'cssgrid-page-9' },\n\t        'Download Firefox Developer Edition'\n\t      ),\n\t      '.'\n\t    )\n\t  );\n\t};\n\t\n\texports.default = function () {\n\t  return _react2.default.createElement(_Main2.default, { currentPageNum: 9, tutorial: _react2.default.createElement(Tutorial, null), homework: _react2.default.createElement(Homework, null) });\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-css-grid-09-named-lines-js-e14a834fd64e2bae44bf.js","import React from 'react';\r\nimport Main from './components/_Main';\r\nimport CodeBlock from '../../components/CodeBlock';\r\nimport DevHomework from '../../components/layout/DevHomework';\r\nimport CodepenLink from '../../components/CodepenLink';\r\nimport DownloadLink from '../../components/DownloadLink';\r\n\r\nconst Tutorial = () => (\r\n  <div>\r\n    <h2>Named Lines</h2>\r\n\r\n    <p>\r\n      In a previous example, we learned how to place an item on the grid by providing the {' '}\r\n      <code>grid-column</code> and <code>grid-row</code> properties with specific grid lines. We can\r\n      also name some or all of those grid lines when defining a grid. This allows us to use those\r\n      names instead of grid lines. To name a grid line, simply add the name in square brackets:\r\n    </p>\r\n\r\n    <p>To name a grid line, we simply provide the name in square brackets:</p>\r\n\r\n    <CodeBlock>\r\n      {`\r\n.container {\r\n  display: grid;\r\n  width: 100%;\r\n  height: 600px;\r\n  grid-gap: 1rem;\r\n  grid-template-columns:\r\n    [main-start sidebar-start] 200px\r\n    [sidebar-end content-start] 1fr\r\n    [column3-start] 1fr\r\n    [content-end main-end];\r\n  grid-template-rows:\r\n    [row1-start] 80px\r\n    [row2-start] 1fr\r\n    [row3-start] 1fr\r\n    [row4-start] 100px\r\n    [row4-end];\r\n}\r\n      `}\r\n    </CodeBlock>\r\n\r\n    <p>\r\n      Now that we have line names, we can use those names when placing items. Let's recreate our\r\n      basic layout using named lines, instead of line numbers:\r\n    </p>\r\n\r\n    <CodeBlock>\r\n      {`\r\n.header {\r\n  grid-column: main-start / main-end;\r\n  grid-row: row1-start / row2-start;\r\n}\r\n\r\n.sidebar {\r\n  grid-column: sidebar-start / sidebar-end;\r\n  grid-row: row2-start / row4-start;\r\n}\r\n\r\n.content-1 {\r\n  grid-column: content-start / content-end;\r\n  grid-row: row2-start / row3-start;\r\n}\r\n\r\n.content-2 {\r\n  grid-column: content-start / column3-start;\r\n  grid-row: row3-start / row4-start;\r\n}\r\n\r\n.content-3 {\r\n  grid-column: column3-start / content-end;\r\n  grid-row: row3-start / row4-start;\r\n}\r\n\r\n.footer {\r\n  grid-column: main-start / main-end;\r\n  grid-row: row4-start / row4-end;\r\n}\r\n      `}\r\n    </CodeBlock>\r\n\r\n    <p>Here is our HTML:</p>\r\n\r\n    <CodeBlock>\r\n      {`\r\n<div class=\"container\">\r\n  <div class=\"item header\">header</div>\r\n  <div class=\"item sidebar\">sidebar</div>\r\n  <div class=\"item content-1\">Content-1</div>\r\n  <div class=\"item content-2\">Content-2</div>\r\n  <div class=\"item content-3\">Content-3</div>\r\n  <div class=\"item footer\">footer</div>\r\n</div>\r\n      `}\r\n    </CodeBlock>\r\n\r\n    <p>Here is the result:</p>\r\n\r\n    <div className=\"container-9\">\r\n      <div className=\"item header-9\">header</div>\r\n      <div className=\"item sidebar-9\">sidebar</div>\r\n      <div className=\"item content-1-9\">Content-1</div>\r\n      <div className=\"item content-2-9\">Content-2</div>\r\n      <div className=\"item content-3-9\">Content-3</div>\r\n      <div className=\"item footer-9\">footer</div>\r\n    </div>\r\n    <CodepenLink link=\"https://codepen.io/mozilladevelopers/pen/dVpQVV\" />\r\n  </div>\r\n);\r\n\r\nconst Homework = () => (\r\n  <DevHomework title=\"Firefox DevTools + CSS Grid Layout\">\r\n    <p>\r\n      Did you know you can customize the color of the grid overlay in Firefox DevTools? The above\r\n      example is on a white background, and the default purple may not be the best color to use.\r\n      When selecting an overlay grid to display, you will see a circle next to the grid name that\r\n      indicates the color of the overlay. Click on that circle, and you can customize the color to\r\n      whatever you'd like. Try a different color, such as red. Don't have Firefox?{' '}\r\n      <DownloadLink content=\"cssgrid-page-9\">\r\n        Download Firefox Developer Edition\r\n      </DownloadLink>.\r\n    </p>\r\n  </DevHomework>\r\n);\r\n\r\nexport default () => <Main currentPageNum={9} tutorial={<Tutorial />} homework={<Homework />} />;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/css-grid/09-named-lines.js"],"sourceRoot":""}